// copyright 2005-8 THALES, BAE Systems, Raytheon

#include "dds_dcps.idl"

#ifndef __ALMAS_DataModel_DEF
#define __ALMAS_DataModel_DEF

module ALMAS_DataModel {

 typedef long AlertIDType;

 typedef long TemplateIDType;

 typedef long TimeoutType;

 typedef DDS::Time_t DateTimeType;

 typedef sequence<octet> ByteSequence;

 typedef sequence<string> StringSet;

 enum CategoryType {
   Action,
   Warning,
   Information,
   Situation};

 enum StateType {
   Raised,
   Routed,
   Received,
   Acknowledged,
   Handled,
   Cancelled,
   Timed_Out};

 enum StatusType {
   Actual,
   Exercise,
   System,
   Test};

 enum ScopeType {
   PublicScope,
   RestrictedScope,
   PrivateScope};

 enum TimeoutActionType {
   CancelOnly,
   NotifyOnly,
   CancelWithNotify};

 enum AckModelType {
   AckByNone,
   AckByAnyone,
   AckByAll};

 struct CallStatus {
   boolean Success;
   short Reason;
   string Description; };

 struct ValidAlertResponseType {
   StringSet AlternativeAction;
   short ActioneePriority; };

 struct ReceiverKindType {
   string RKType;
   string RKParentType;
   ValidAlertResponseType ValidResponse; };
 typedef sequence<ReceiverKindType> ReceiverKindTypeSet;

 struct DynamicMessageDataType {
   string DataType;
   string DataTag;
   string DataValue; };
 typedef sequence<DynamicMessageDataType> DynamicMessageDataTypeSet;

 struct StaticMessageType {
   string MessageText;
   string MessageLanguage; };
 typedef sequence<StaticMessageType> StaticMessageTypeSet;

 struct AlertDataExtraAttributesType {
   string Name;
   short TypeOfByteData;
   string Description;
   ByteSequence Value; };
 typedef sequence<AlertDataExtraAttributesType> AlertDataExtraAttributesTypeSet;

 struct AlertDataType {
   @key TemplateIDType TemplateID;
   CategoryType Category;
   short Priority;
   StatusType Status;
   ScopeType Scope;
   TimeoutType Timeout;
   boolean ConfirmationRequired;
   string SecondaryGrouping;
   boolean Persistent;
   boolean ReliablyDistributed;
   TimeoutActionType TimeoutAction;
   AckModelType AcknowledgementModel;
   StaticMessageTypeSet StaticMessages;
   DynamicMessageDataTypeSet DynamicMessages;
   AlertDataExtraAttributesTypeSet ExtraAttributes; };

 struct AlertTemplateType {
   boolean Inhibited;
   boolean RaiseToAll;
   @key AlertDataType AlertData;
   ReceiverKindTypeSet ReceiverKinds; };

 struct AlertReportType {
   boolean Acknowledged;
   boolean Routed;
   boolean Actioned;
   boolean ReceiverIsActionee;
   StringSet AlternativeAction;
   @key string ReceiverID;
   @key AlertIDType AlertID; };

 struct AvailableAlertReceiverType {
   string ReceiverID;
   ReceiverKindType ReceiverKind; };
 typedef sequence<AvailableAlertReceiverType> AvailableAlertReceiverTypeSet;

 struct Alert {
   @key AlertIDType AlertID;
   DateTimeType RaisingTime;
   StateType CurrentState;
   string ProducerID;
   AlertDataType AlertData;
   AvailableAlertReceiverTypeSet Receivers; };

};

#endif
